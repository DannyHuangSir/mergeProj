package com.twfhclife.generic.applet;

import java.awt.Container;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.PrivilegedAction;

import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

import tw.com.chttl.Module;
import tw.com.chttl.Token;

public class HisecureApplet extends javax.swing.JApplet {

	private static final long serialVersionUID = 1L;
	
	JLabel label;
    JTextField pinField;
    JButton btn;
    /** Initializes the applet NewJApplet1 */
    public void init() {
        JPanel p = new JPanel();
        p.setLayout(new GridLayout(2, 2, 2, 2));
        label = new JLabel("請輸入憑證PIN碼");
        pinField = new JTextField("        ");
        p.add(label);
        p.add(pinField);
        btn = new JButton("登入");
        btn.addActionListener(new B1());
        p.add(btn);
        Container con = getContentPane();
        con.setLayout(new GridBagLayout()); // Used to center the panel
        con.add(p);
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                        
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>                      


   class B1 implements ActionListener,PrivilegedAction<Object> {
        private String checkLogin(){
            String msg = "none";
            try {
                Module.initialize();
                Module module = Module.getInstance();
                int[] tokIDs = module.getTokens();
                if (tokIDs.length != 0) {
                    msg = "Ready!";
                    String pin = "";
                    if(pinField!=null){
                        pin =pinField.getText();
                    }
                    Token tok=module.getToken(tokIDs[0]);
                    boolean login=tok.login(pin);
                    if(label!=null){
                        label.setText("認證成功:" + login);
                    }
                } else {
                    msg = "Confirm the reader is ready yet!";
                }
            } catch (Exception e) {
                msg = e.getMessage();
            } /*finally {
                return msg;
            }*/
            return msg;
       }
    public void actionPerformed(ActionEvent e) {
        checkLogin();
    }
         public Object run() {
            return  "checkLogin";
        }
  }
}
