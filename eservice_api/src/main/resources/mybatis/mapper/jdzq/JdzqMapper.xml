<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twfhclife.eservice.api.jdzq.dao.JdzqDao">

    <resultMap id="CaseMap" type="com.twfhclife.eservice.api.jdzq.model.CaseVo">
        <result column="PolicyNo" property="policyNo" />
        <result column="PolicyType" property="policyType" />
        <result column="AppName" property="appName" />
        <result column="AppID" property="appId" />
        <result column="AppBirth" property="appBirth" />
        <result column="InsName" property="insName" />
        <result column="InsID" property="insId" />
        <result column="InsBirth" property="insBirth" />
        <result column="TBSubmitDate" property="tBSubmitDate" />
        <result column="BPMCurrentTak" property="bPMCurrentTak" />
        <result column="NoteStatus" property="noteStatus" />
        <result column="StampResult" property="stampResult" />
        <result column="Manager" property="manager" />
        <result column="TransPayDate" property="transPayDate" />
        <result column="PolicyActiveDate" property="policyActiveDate" />
        <result column="PrintDate" property="printDate" />
        <result column="ReviewResult" property="reviewResult" />
        <result column="RFeeApplyDate" property="applyDate" />
        <result column="AccDocNo" property="accDocNo" />
        <result column="PayType" property="payType" />
        <result column="PolicyAmountNTD" property="policyAmountNTD" />
        <result column="PolicyAmount" property="policyAmount" />
        <result column="PM_PRME_NEW_OLD_SW" property="paymentMode" />
        <result column="PrmeNewOldSW" property="prmeNewOldSW" />
        <result column="NoteVerifyResult" property="noteVerifyResult" />
        <result column="Main_Key" property="mainKey" />
    </resultMap>

    <select id="getCaseList" resultMap="CaseMap">
        SELECT DISTINCT A.PolicyNo, A.AppName, A.InsName, A.TBSubmitDate, A.BPMCurrentTak, D.NoteStatus, D.NoteVerifyResult, D.PolicyType
        FROM MainPolicy A
        LEFT JOIN (
        SELECT B.NOTE_KEY, B.MAIN_KEY, B.iscancel, B.NoteStatus, B.NoteVerifyResult, B.PolicyTypeName PolicyType FROM PolicyNote B
        INNER JOIN (SELECT MAX(NOTE_KEY) NOTE_KEY, MAIN_KEY FROM PolicyNote GROUP BY MAIN_KEY) C ON B.NOTE_KEY = C.NOTE_KEY AND B.MAIN_KEY = C.MAIN_KEY
        ) D ON A.MAIN_KEY = D.MAIN_KEY
        <where>
            <foreach collection="vo.caseQuery" item="item" open="(" close=")" separator="OR">
                  <trim prefixOverrides="AND">
                      <if test="item.serialNum != null and item.serialNum != ''">
                          AND A.PSalesCode = #{item.serialNum}
                      </if>
                      <if test="item.branchCode != null and item.branchCode != ''">
                          AND A.BranchCode = #{item.branchCode}
                      </if>
                      <if test="item.agentCode != null and item.agentCode != ''">
                          AND A.AgentCode = #{item.agentCode}
                      </if>
                  </trim>
            </foreach>
            <if test="vo.policyNo != null and vo.policyNo != ''">
                AND A.PolicyNo LIKE CONCAT('%', #{vo.policyNo}, '%')
            </if>
            <if test="vo.lipmName != null and vo.lipmName != ''">
                AND A.AppName LIKE CONCAT('%', #{vo.lipmName}, '%')
            </if>
            <if test="vo.lipmId != null and vo.lipmId != ''">
                AND A.AppId LIKE CONCAT('%', #{vo.lipmId}, '%')
            </if>
            <if test="vo.lipiName != null and vo.lipiName != ''">
                AND A.InsName LIKE CONCAT('%', #{vo.lipiName}, '%')
            </if>
            <if test="vo.lipiId != null and vo.lipiId != ''">
                AND A.InsID LIKE CONCAT('%', #{vo.lipiId}, '%')
            </if>
            <if test="vo.caseStatus != null and vo.caseStatus != ''">
                   AND A.BPMCurrentTak = #{vo.caseStatus}
            </if>
            AND A.itemserial = 1 AND D.iscancel = 'N'
        </where>
    </select>

    <select id="getCaseProcess" resultMap="CaseMap">
        SELECT DISTINCT A.PolicyNo, A.AppName, A.AppID, A.InsName, A.InsID, A.TBSubmitDate,
            D.NoteStatus, D.NoteVerifyResult, D.PolicyType, FORMAT(A.PrintDate, 'yyyyMMdd') PrintDate, A.PolicyActiveDate, A.TransPayDate,
            P.UserName Manager, A.StampResult,
        (SELECT TOP (1) ReviewResult
            FROM PolicyReviewLog
                where Main_Key = (select Main_Key from MainPolicy where policyNo = #{policyNo})
                and LogType = 'B'
                and Sub_Serial = '0'
            order by ReviewTimes desc, ReviewType desc
        ) ReviewResult,
        (SELECT TOP(1) RFeeApplyDate FROM PolicyReject WHERE MAIN_KEY = A.MAIN_KEY AND RFeeApplyDate IS NOT NULL) RFeeApplyDate
        FROM MainPolicy A
        LEFT JOIN (
        SELECT B.NOTE_KEY, B.MAIN_KEY, B.iscancel, B.NoteStatus, B.NoteVerifyResult, B.PolicyTypeName PolicyType FROM
        PolicyNote B
        INNER JOIN (SELECT MAX(NOTE_KEY) NOTE_KEY, MAIN_KEY FROM PolicyNote GROUP BY MAIN_KEY) C
            ON B.NOTE_KEY = C.NOTE_KEY AND B.MAIN_KEY = C.MAIN_KEY
        ) D ON A.MAIN_KEY = D.MAIN_KEY
        LEFT JOIN UserProfile P ON P.User_ID = A.Manager
        WHERE A.PolicyNo = #{policyNo}
    </select>
    
    <select id="getPolicyInfo" resultMap="CaseMap">
        SELECT DISTINCT A.PolicyNo, A.AppName, A.AppID, A.AppBirth, A.TBSubmitDate, A.BPMCurrentTak,
        A.AccDocNo, A.PM_PRME_NEW_OLD_SW,
        (SELECT TOP(1) PrmeNewOldSW FROM PolicyFormData WHERE MAIN_KEY = A.MAIN_KEY) PrmeNewOldSW,
        D.PolicyType, A.StampResult, A.PayType, A.InsBirth, A.InsName, A.InsID, A.PolicyAmount, A.PolicyAmountNTD
        FROM MainPolicy A
        LEFT JOIN (
            SELECT B.NOTE_KEY, B.MAIN_KEY, B.iscancel, B.NoteStatus, B.NoteVerifyResult, B.PolicyTypeName PolicyType FROM
            PolicyNote B
            INNER JOIN (SELECT MAX(NOTE_KEY) NOTE_KEY, MAIN_KEY FROM PolicyNote GROUP BY MAIN_KEY) C
        ON B.NOTE_KEY = C.NOTE_KEY AND B.MAIN_KEY = C.MAIN_KEY
        ) D ON A.MAIN_KEY = D.MAIN_KEY
        WHERE A.PolicyNo = #{policyNo}
    </select>
    
    <select id="getNoteContent" resultMap="CaseMap">
        SELECT D.Note_key Main_key, D.APPName, D.InsName, D.NoteDate PrintDate, D.PolicyTypeName PolicyType, D.NoteVerifyResult FROM MainPolicy A
        LEFT JOIN (
            SELECT B.APPName, B.InsName, B.NoteDate, B.PolicyTypeName, B.NOTE_KEY, B.MAIN_KEY, B.iscancel, B.NoteStatus, B.NoteVerifyResult, B.PolicyTypeName PolicyType FROM
            PolicyNote B
            INNER JOIN (SELECT MAX(NOTE_KEY) NOTE_KEY, MAIN_KEY FROM PolicyNote GROUP BY MAIN_KEY) C
            ON B.NOTE_KEY = C.NOTE_KEY AND B.MAIN_KEY = C.MAIN_KEY
        ) D ON A.MAIN_KEY = D.MAIN_KEY
        WHERE A.PolicyNo = #{policyNo}
    </select>

    <select id="getNotePdf" resultType="com.twfhclife.eservice.api.jdzq.model.NotePdfVo">
        SELECT DISTINCT A.PolicyNo policyNo, A.AppName appName, A.InsName insName, A.AgentCode agentCode, P.BrokerName agentName, A.AgentSalesName agentSalesName, A.AgentSalesID agentSalesID,
        A.AccDocNo accDocNo, D.BranchDesc branchDesc, D.PolicyTypeName policyTypeName, D.ManageDate manageDate, D.ProcessorName processorName, D.ExtNumber extNumber, D.Note_Key note_Key, E.ContentMemo contentMemo,
        D.DueDate dueDate, D.NoteVerifyMemo noteVerifyMemo
        FROM MainPolicy A
        LEFT JOIN (
        SELECT B.NOTE_KEY, B.MAIN_KEY, B.NoteStatus, B.NoteVerifyResult, B.PolicyTypeName,
        B.ManageDate, B.ProcessorName, B.ExtNumber, B.DueDate, B.NoteVerifyMemo, B.BranchDesc FROM PolicyNote B
        INNER JOIN (SELECT MAX(NOTE_KEY) NOTE_KEY, MAIN_KEY FROM PolicyNote GROUP BY MAIN_KEY) C ON B.NOTE_KEY = C.NOTE_KEY AND B.MAIN_KEY = C.MAIN_KEY
        ) D ON A.MAIN_KEY = D.MAIN_KEY
        LEFT JOIN PolicyNoteItems E ON D.Note_Key = E.Note_Key AND A.ItemSerial = E.item_Serial
        LEFT JOIN BrokerProfile P ON A.AgentCode = P.Broker_ID
        WHERE A.PolicyNo = #{policyNo}
    </select>

    <select id="getNoteSchedule" resultType="com.twfhclife.eservice.api.jdzq.model.NoteNotifyVo">
        SELECT A.AppName, A.InsName, A.PolicyNo, B.DueDate, A.PSalesCode FROM MainPolicy A INNER JOIN
        PolicyNote B ON A.Main_Key = B.Main_Key
        WHERE A.BPMCurrentTak IN ('602000S', '602500S')
        AND B.DueDate = FORMAT(DATEADD(day, -2, SYSDATETIME()), 'yyyyMMdd')
    </select>
</mapper>