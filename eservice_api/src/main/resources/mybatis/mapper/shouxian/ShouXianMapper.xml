<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twfhclife.eservice.api.shouxian.dao.ShouXianDao">

    <resultMap id="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyVo">
        <result column="POLICY_NO" property="policyNo"/>
        <result column="POLICY_TYPE" property="policyType"/>
        <result column="LIPM_NAME" property="lipmName"/>
        <result column="LIPM_ID" property="lipmId"/>
        <result column="LIPI_NAME" property="lipiName"/>
        <result column="LIPI_ID" property="lipiId"/>
        <result column="AGENT_NAME" property="agent"/>
        <result column="STATUS" property="status"/>
        <result column="EFFECTIVE_DATE" property="effectiveDate"/>
        <result column="MAIN_AMOUNT" property="mainAmount"/>
        <result column="LIPI_TABL_PREM" property="lipiTablPrem"/>
        <result column="PAYMENT_MODE" property="paymentMode"/>
        <result column="PREM_YEAR" property="premYear"/>
        <result column="PROD_MODE" property="prodMode"/>
        <result column="PROD_NAME" property="prodName"/>
        <result column="LIPM_RCP_METH_CODE" property="paymentMethod"/>
        <result column="LIPI_INSU_END_DATE" property="endDate"/>
        <result column="CURRENCY" property="currency"/>
    </resultMap>

    <select id="getPolicyList" resultMap="PolicyMap">
        SELECT CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) POLICY_NO, lme.LIPM_INSU_TYPE POLICY_TYPE,
        lme.LIPM_NAME_1 LIPM_NAME, lme.LIPM_ID, lie.LIPI_NAME, lie.LIPI_ID, LBE.BNAG_REC_CLERK AGENT_NAME,
        CASE
            WHEN lme.LIPM_ST &lt;= 18 THEN 1
            WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
            WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
            END AS STATUS,
        lie.LIPI_INSU_BEG_DATE EFFECTIVE_DATE, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_TABL_PREM, (CASE WHEN lme.LIPM_RCP_CODE = 'A' AND lme.LIPM_FLEX_RCP_MK = 'Y' THEN 'T' ELSE lme.LIPM_RCP_CODE END) AS PAYMENT_MODE, lpe.PROD_CURRENCY CURRENCY,
        lie.LIPI_PREM_YEAR PREM_YEAR, lpe.SETT_INSU_TYPE PROD_MODE, lpe.SETT_CH_NAME PROD_NAME, lme.LIPM_RCP_METH_CODE
        FROM LILIPM_ES_FLOWTEST lme
        INNER JOIN LILIPI_ES_FLOWTEST lie
            ON CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = CONCAT(CONCAT(lie.LIPI_INSU_TYPE, lie.LIPI_INSU_GRP_NO), lie.LIPI_INSU_SEQ_NO)
        INNER JOIN LIBNAG_ES_FLOWTEST lbe ON CONCAT(CONCAT(lbe.BNAG_INSU_TYPE , lbe.BNAG_INSU_GRP_NO), lbe.BNAG_INSU_SEQ_NO) = CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO)
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        WHERE lbe.BNAG_ID IN
        <foreach collection="vo.serialNums" item="num" open="(" close=")" separator=",">
            #{num}
        </foreach>
        <if test="vo.policyNo != null and vo.policyNo != ''">
            AND CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO)
                    LIKE CONCAT('%', CONCAT(#{vo.policyNo}, '%'))
        </if>
        <if test="vo.lipmName != null and vo.lipmName != ''">
            AND lme.LIPM_NAME_1 LIKE CONCAT('%', CONCAT(#{vo.lipmName}, '%'))
        </if>
        <if test="vo.lipmId != null and vo.lipmId != ''">
            AND lme.LIPM_ID LIKE CONCAT('%', CONCAT(#{vo.lipmId}, '%'))
        </if>
        <if test="vo.lipiName != null and vo.lipiName != ''">
            AND lie.LIPI_NAME LIKE CONCAT('%', CONCAT(#{vo.lipiName}, '%'))
        </if>
        <if test="vo.lipiId != null and vo.lipiId != ''">
            AND lie.LIPI_ID LIKE CONCAT('%', CONCAT(#{vo.lipiId}, '%'))
        </if>
        <if test="vo.prodName != null and vo.prodName != ''">
            AND lpe.SETT_CH_NAME LIKE CONCAT('%', CONCAT(#{vo.prodName}, '%'))
        </if>
    </select>

    <resultMap id="PolicyBaseMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyBaseVo">
        <result column="POLICY_NO" property="policyNo"/>
        <result column="POLICY_TYPE" property="policyType"/>
        <result column="LIPM_NAME" property="lipmName"/>
        <result column="LIPM_ID" property="lipmId"/>
        <result column="PMDA_APPLICANT_CELLPHONE" property="lipmPhone"/>
        <result column="PMDA_APPLICANT_EMAIL" property="lipmMail"/>
        <result column="LIPM_ADDR" property="lipmAddr"/>
        <result column="LIPI_NAME" property="lipiName"/>
        <result column="LIPI_ID" property="lipiId"/>
        <result column="LIPI_BIRTH" property="lipiBirth"/>
        <result column="LIPI_AGE" property="lipiAge"/>
        <result column="LIPI_SEX" property="lipiSex"/>
        <result column="AGENT_NAME" property="agent"/>
        <result column="STATUS" property="status"/>
        <result column="EFFECTIVE_DATE" property="effectiveDate"/>
        <result column="MAIN_AMOUNT" property="mainAmount"/>
        <result column="LIPI_TABL_PREM" property="lipiTablPrem"/>
        <result column="PAYMENT_MODE" property="paymentMode"/>
        <result column="PREM_YEAR" property="premYear"/>
        <result column="PROD_MODE" property="prodMode"/>
        <result column="PROD_NAME" property="prodName"/>
        <result column="LIPM_RCP_METH_CODE" property="paymentMethod"/>
        <result column="LIPI_INSU_BEG_DATE" property="beginDate"/>
        <result column="LIPI_INSU_END_DATE" property="endDate"/>
        <result column="PMDA_EPO_MK" property="pmdaEpoMk"/>
        <result column="CURRENCY" property="currency"/>
        <association property="beneficiaries" resultMap="PolicyBeneficiaryMap"></association>
    </resultMap>

    <resultMap id="PolicyBeneficiaryMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyBeneficiaryVo">
        <result column="LIPB_NAME" property="lipbName"/>
        <result column="LIPB_RELA" property="rela"/>
        <result column="LIPB_BENI_CODE" property="code"/>
        <result column="LIPB_SEQ" property="seq"/>
    </resultMap>

    <select id="getBasePolicy" resultMap="PolicyBaseMap">
        SELECT CASE
            WHEN lme.LIPM_ST &lt;= 18 THEN 1
            WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
            WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
            END AS STATUS
        , lme.LIPM_TEL_H, lip.PMDA_APPLICANT_CELLPHONE, lip.PMDA_APPLICANT_EMAIL,
        lme.LIPM_ADDR, lie.LIPI_BIRTH, lie.LIPI_AGE, lie.LIPI_SEX, lbp.LIPB_NAME, lbp.LIPB_RELA, lpe.PROD_CURRENCY CURRENCY,
        lbp.LIPB_BENI_CODE, lbp.LIPB_SEQ, lme.LIPM_NAME_1  LIPM_NAME, lme.LIPM_ID, lie.LIPI_NAME, lie.LIPI_ID,
        (CASE WHEN lme.LIPM_RCP_CODE = 'A' AND lme.LIPM_FLEX_RCP_MK = 'Y' THEN 'T' ELSE lme.LIPM_RCP_CODE END) AS PAYMENT_MODE, lip.PMDA_EPO_MK,
        (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_BEG_DATE, lie.LIPI_INSU_END_DATE, lme.LIPM_RCP_METH_CODE, lie.LIPI_PREM_YEAR PREM_YEAR,
        lpe.SETT_CH_NAME PROD_NAME, CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) POLICY_NO
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIPMDA_ES_FLOWTEST lip ON lme.LIPM_INSU_TYPE = lip.PMDA_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lip.PMDA_INSU_GRP_NO  AND lme.LIPM_INSU_SEQ_NO = lip.PMDA_INSU_SEQ_NO
        LEFT JOIN LILIPB_ES_FLOWTEST lbp ON lme.LIPM_INSU_TYPE = lbp.LIPB_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lbp.LIPB_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lbp.LIPB_INSU_SEQ_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PolicySafeGuardMap" extends="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicySafeGuardVo">
        <collection property="safeGuards" resultMap="SafeGuardMap"/>
    </resultMap>

    <resultMap id="SafeGuardMap" type="com.twfhclife.eservice.api.shouxian.model.SafeGuardVo">
        <result column="DESI_DESC_CH" property="name"/>
    </resultMap>

    <select id="getSafeGuard" resultMap="PolicySafeGuardMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM,
        CASE
            WHEN lme.LIPM_ST &lt;= 18 THEN 1
            WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
            WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
            END AS STATUS, lde.DESI_DESC_CH, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIDESI_ES_FLOWTEST lde ON lde.DESI_CODE = lpe.SETT_INSU_TYPE
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PolicyPaymentRecordMap" extends="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyPaymentRecordVo">
        <collection property="paymentRecords" resultMap="PaymentRecordMap"/>
    </resultMap>

    <resultMap id="PaymentRecordMap" type="com.twfhclife.eservice.api.shouxian.model.PaymentRecordVo">
        <result column="PRPA_RCP_DATE" property="rcpDate"/>
        <result column="PRPA_PAAB_AMT" property="paabAmt"/>
        <result column="PRPA_ACT_AMT" property="actAmt"/>
        <result column="PRPA_RCP_CODE" property="rcpCode"/>
        <result column="PRPA_DESC" property="desc"/>
    </resultMap>

    <select id="getPaymentRecord" resultMap="PolicyPaymentRecordMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM, CASE
            WHEN lme.LIPM_ST &lt;= 18 THEN 1
            WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
            WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lme.LIPM_RCP_METH_CODE,
        lpe.PROD_CURRENCY CURRENCY, (CASE WHEN lme.LIPM_RCP_CODE = 'A' AND lme.LIPM_FLEX_RCP_MK = 'Y' THEN 'T' ELSE lme.LIPM_RCP_CODE END) AS PAYMENT_MODE,
        lpp.PRPA_RCP_DATE, lpp.PRPA_PAAB_AMT, lpp.PRPA_ACT_AMT, lpp.PRPA_RCP_CODE,
        CONCAT('第', CONCAT(lpp.PRPA_TMS, CONCAT('期/共', CONCAT(
            CASE	WHEN lpp.PRPA_RCP_CODE = N'A' THEN lie.LIPI_PREM_YEAR * 1
            WHEN lpp.PRPA_RCP_CODE = N'S' THEN lie.LIPI_PREM_YEAR * 2
            WHEN lpp.PRPA_RCP_CODE = N'Q' THEN lie.LIPI_PREM_YEAR * 4
            WHEN lpp.PRPA_RCP_CODE = N'M' THEN lie.LIPI_PREM_YEAR * 12
            WHEN lpp.PRPA_RCP_CODE = N'T' THEN 1
            END, '期'
        ))))
        PRPA_DESC
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIPRPA_ES_FLOWTEST lpp ON lme.LIPM_INSU_TYPE = lpp.PRPA_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lpp.PRPA_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lpp.PRPA_INSU_SEQ_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PolicyPremiumMap" extends="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyPremiumVo">
        <collection property="premiums" resultMap="PremiumMap"/>
    </resultMap>

    <resultMap id="PremiumMap" type="com.twfhclife.eservice.api.shouxian.model.PremiumVo">
        <result column="BONF_FILE_BEG_DATE" property="beginDate"/>
        <result column="BONF_BON_BAL" property="balance"/>
        <result column="BONF_TAKE_CODE" property="code"/>
        <result column="BONF_BON_DATE" property="bonDate"/>
        <result column="PREMIUM" property="premium"/>
    </resultMap>

    <select id="getPolicyPremium" resultMap="PolicyPremiumMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM,
        CASE
        WHEN lme.LIPM_ST &lt;= 18 THEN 1
        WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
        WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY,
        TO_CHAR(lbf.BONF_FILE_BEG_DATE, 'yyyy-MM-dd') BONF_FILE_BEG_DATE, lbf.BONF_BON_BAL, lbf.BONF_TAKE_CODE,
        TO_CHAR(lbf.BONF_BON_DATE, 'yyyy-MM-dd') BONF_BON_DATE,
        lbf.BONF_BON + NVL(lbf.BONF_RIDER_CODE_1,0) + NVL(lbf.BONF_RIDER_CODE_2,0) + NVL(lbf.BONF_RIDER_CODE_3,0) + NVL(lbf.BONF_RIDER_CODE_4,0) PREMIUM
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIBONF_ES_FLOWTEST lbf ON lme.LIPM_INSU_TYPE = lbf.BONF_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lbf.BONF_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lbf.BONF_INSU_SEQ_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PolicyExpireOfPaymentMap" extends="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyExpireOfPaymentVo">
        <collection property="payments" resultMap="ExpireOfPaymentMap"/>
    </resultMap>

    <resultMap id="ExpireOfPaymentMap" type="com.twfhclife.eservice.api.shouxian.model.ExpireOfPaymentVo">
        <result column="PAYF_PAY_REAS" property="payReas"/>
        <result column="PAYF_PAY_AMT" property="payAmount"/>
        <result column="PAHI_DEP_I_BOOK_DATE" property="bookDate"/>
        <result column="PAYF_NAME" property="payName"/>
        <result column="PAYF_PAY_METH" property="payMethod"/>
        <result column="PAYF_BANK" property="bank"/>
    </resultMap>

    <select id="getExpireOfPayment" resultMap="PolicyExpireOfPaymentMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM,
        CASE
        WHEN lme.LIPM_ST &lt;= 18 THEN 1
        WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
        WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY,
        lbf.PAYF_PAY_REAS, lbf.PAYF_PAY_AMT, '' PAHI_DEP_I_BOOK_DATE, lbf.PAYF_PAY_METH, lbf.PAYF_BANK, lbf.PAYF_NAME
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIPAYF_ES_FLOWTEST lbf ON CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = lbf.PAYF_INSU_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PolicyChangeInfoMap" extends="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyChangeInfoVo">
        <collection property="changeInfos" resultMap="ChangeInfoMap"/>
    </resultMap>

    <resultMap id="ChangeInfoMap" type="com.twfhclife.eservice.api.shouxian.model.ChangeInfoVo">
        <result column="RCDC_DELIVERY_AGEN_CODE" property="applyType"/>
        <result column="RCDC_ACC_DATE" property="accDate"/>
        <result column="RCDC_PROC_MK" property="procMk"/>
        <result column="RCDC_CHAN_ITEM_1" property="item1"/>
        <result column="RCDC_CHAN_ITEM_2" property="item2"/>
        <result column="RCDC_CHAN_ITEM_3" property="item3"/>
        <result column="RCDC_CHAN_ITEM_4" property="item4"/>
        <result column="RCDC_CHAN_ITEM_5" property="item5"/>
        <result column="RCDC_CHAN_ITEM_6" property="item6"/>
        <result column="RCDC_CHAN_ITEM_7" property="item7"/>
        <result column="RCDC_CHAN_ITEM_8" property="item8"/>
        <result column="RCDC_CHAN_ITEM_9" property="item9"/>
        <result column="RCDC_CHAN_ITEM_10" property="item10"/>
    </resultMap>

    <select id="getPolicyChangeInfo" resultMap="PolicyChangeInfoMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM,
        CASE
        WHEN lme.LIPM_ST &lt;= 18 THEN 1
        WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
        WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY,
        lrc.RCDC_DELIVERY_AGEN_CODE, lrc.RCDC_ACC_DATE, lrc.RCDC_PROC_MK,
        lrc.RCDC_CHAN_ITEM_1, lrc.RCDC_CHAN_ITEM_2, lrc.RCDC_CHAN_ITEM_3, lrc.RCDC_CHAN_ITEM_4, lrc.RCDC_CHAN_ITEM_5, lrc.RCDC_CHAN_ITEM_6, lrc.RCDC_CHAN_ITEM_7, lrc.RCDC_CHAN_ITEM_8, lrc.RCDC_CHAN_ITEM_9, lrc.RCDC_CHAN_ITEM_10
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIRCDC_ES_FLOWTEST lrc ON lme.LIPM_INSU_TYPE = lrc.RCDC_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lrc.RCDC_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lrc.RCDC_INSU_SEQ_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <select id="getPolicyInfo" resultMap="PolicyMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM,
        CASE
        WHEN lme.LIPM_ST &lt;= 18 THEN 1
        WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
        WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="IncomeDistributionMap" type="com.twfhclife.eservice.api.shouxian.model.IncomeDistributionVo">
        <result column="INVT_NAME" property="invtName"/>
        <result column="INVT_NO" property="invtNo"/>
        <result column="INPD_INT_COMPU_DATE" property="compuDate"/>
        <result column="CLUP_TR_DATE" property="trDate"/>
        <result column="INVT_EXCH_CURR" property="currency"/>
        <result column="CLUP_EXPE_UNITS" property="expeUnits"/>
        <result column="CLUP_INPR_RATE" property="inprRate"/>
        <result column="CLUP_TR_DATE" property="trDate"/>
        <result column="CLUP_EXPE_NTD" property="expeNtd"/>
        <result column="CLUP_EXCH_RATE" property="exchRate"/>
    </resultMap>

    <select id="getIncomeDistribution" resultMap="IncomeDistributionMap">
        SELECT DISTINCT lin.INVT_NAME, lin.INVT_NO,
        to_char(lcp.CLUP_TR_DATE, 'yyyy-MM-dd') CLUP_TR_DATE, lcp.CLUP_EXPE_CURR, lcp.CLUP_EXPE_UNITS, lcp.CLUP_INPR_RATE,
        lcp.CLUP_TR_DATE, lcp.CLUP_EXCH_RATE, lcp.CLUP_EXPE_NTD, lcp.CLUP_EXPE_NTD, lcp.CLUP_EXCH_RATE,
        to_char(lip.INPD_INT_COMPU_DATE - numtodsinterval(1, 'day'), 'yyyy-MM-dd') INPD_INT_COMPU_DATE
        FROM LICLUP_ES_FLOWTEST lcp
        LEFT JOIN LIINPD_ES_FLOWTEST lip ON lcp.CLUP_INVT_NO = lip.INPD_INVT_NO AND lip.INPD_DATE = lcp.CLUP_DATE
        LEFT JOIN LIINVT_ES_FLOWTEST lin ON lcp.CLUP_INVT_NO = lin.INVT_NO
        WHERE lcp.CLUP_INSU_NO = #{policyNo}
        ORDER BY lcp.CLUP_TR_DATE DESC
    </select>

    <resultMap id="FundTransactionListMap" type="com.twfhclife.eservice.policy.model.FundTransactionVo">
        <result column="INVT_NAME" property="invtName"/>
        <result column="INVT_NO" property="invtNo"/>
        <result column="SADP_TR_DATE" property="sadpTrDate"/>
        <result column="SADP_TR_CODE" property="sadpTrCode"/>
        <result column="SADP_TR_UNITS" property="sadpTrUnits"/>
        <result column="FUND_VALUE" property="fundValue"/>
        <result column="SADP_EXCH_DATE" property="sadpExchDate"/>
    </resultMap>

    <select id="getFundTransactionPageList" resultMap="FundTransactionListMap">
        SELECT * FROM (
            SELECT rownum ROW_NUM, lsp.SADP_TR_DATE, lin.INVT_NAME, lin.INVT_NO, lsp.SADP_TR_CODE,
            CASE WHEN SUBSTR(lsp.SADP_NO, 1, 2) = 'RT' THEN lsp.SADP_TR_AMT
            ELSE SADP_TR_UNITS
            END SADP_TR_UNITS,
            CASE WHEN lsp.SADP_TR_TYPE = '1' THEN leh.EXCH_SPEBK_PURATE
            WHEN lsp.SADP_TR_TYPE = '2' THEN leh.EXCH_SPEBK_SORATE
            END FUND_VALUE, lsp.SADP_EXCH_DATE
            FROM LISADP_ES_FLOWTEST lsp
            LEFT JOIN LIINVT_ES_FLOWTEST lin ON lsp.SADP_INVT_NO  = lin.INVT_NO
            LEFT JOIN LIEXCH_ES_FLOWTEST leh ON lsp.SADP_TR_DATE = leh.EXCH_DATE
            <where>
                <if test="trCode != null">
                    <choose>
                        <when test="trCode == 'INV101'">
                            AND lsp.SADP_TR_CODE IN ('INV101', 'INV102', 'INV103')
                        </when>
                        <otherwise>
                            AND lsp.SADP_TR_CODE = #{trCode}
                        </otherwise>
                    </choose>
                </if>
                <if test="startDate != null">
                    AND lsp.SADP_TR_DATE <![CDATA[>=]]> to_date(#{startDate}, 'yyyy/MM/dd')
                </if>
                <if test="endDate != null">
                    AND lsp.SADP_TR_DATE <![CDATA[<=]]> to_date(#{endDate}, 'yyyy/MM/dd')
                </if>
            </where>
        )
        <if test="pageNum != null and pageSize != null">
            WHERE
            ROW_NUM <![CDATA[>=]]> ((#{pageNum} - 1) * #{pageSize}) + 1
            AND ROW_NUM <![CDATA[<=]]> (#{pageNum} * #{pageSize})
        </if>
    </select>

    <select id="getFundTransactionTotal" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT rownum ROW_NUM, lsp.SADP_TR_DATE, lin.INVT_NAME, lin.INVT_NO, lsp.SADP_TR_CODE,
        CASE WHEN SUBSTR(lsp.SADP_NO, 1, 2) = 'RT' THEN lsp.SADP_TR_AMT
        ELSE SADP_TR_UNITS
        END SADP_TR_UNITS,
        CASE WHEN lsp.SADP_TR_TYPE = '1' THEN leh.EXCH_SPEBK_PURATE
        WHEN lsp.SADP_TR_TYPE = '2' THEN leh.EXCH_SPEBK_SORATE
        END FUND_VALUE, lsp.SADP_EXCH_DATE
        FROM LISADP_ES_FLOWTEST lsp
        LEFT JOIN LIINVT_ES_FLOWTEST lin ON lsp.SADP_INVT_NO  = lin.INVT_NO
        LEFT JOIN LIEXCH_ES_FLOWTEST leh ON lsp.SADP_TR_DATE = leh.EXCH_DATE
        <where>
            <if test="trCode != null">
                <choose>
                    <when test="trCode == 'INV101'">
                        AND lsp.SADP_TR_CODE IN ('INV101', 'INV102', 'INV103')
                    </when>
                    <otherwise>
                        AND lsp.SADP_TR_CODE = #{trCode}
                    </otherwise>
                </choose>
            </if>
            <if test="startDate != null">
                AND lsp.SADP_TR_DATE <![CDATA[>=]]> to_date(#{startDate}, 'yyyy/MM/dd')
            </if>
            <if test="endDate != null">
                AND lsp.SADP_TR_DATE <![CDATA[<=]]> to_date(#{endDate}, 'yyyy/MM/dd')
            </if>
        </where>
        )
    </select>
    
</mapper>