<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.twfhclife.eservice.api.shouxian.dao.ShouXianDao">

    <resultMap id="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyVo">
        <result column="POLICY_NO" property="policyNo"/>
        <result column="POLICY_TYPE" property="policyType"/>
        <result column="LIPM_NAME" property="lipmName"/>
        <result column="LIPM_ID" property="lipmId"/>
        <result column="LIPI_NAME" property="lipiName"/>
        <result column="LIPI_ID" property="lipiId"/>
        <result column="AGENT_NAME" property="agent"/>
        <result column="STATUS" property="status"/>
        <result column="EFFECTIVE_DATE" property="effectiveDate"/>
        <result column="MAIN_AMOUNT" property="mainAmount"/>
        <result column="LIPI_TABL_PREM" property="lipiTablPrem"/>
        <result column="PAYMENT_MODE" property="paymentMode"/>
        <result column="PREM_YEAR" property="premYear"/>
        <result column="PROD_MODE" property="prodMode"/>
        <result column="PROD_NAME" property="prodName"/>
        <result column="LIPM_RCP_METH_CODE" property="paymentMethod"/>
        <result column="LIPI_INSU_END_DATE" property="endDate"/>
        <result column="CURRENCY" property="currency"/>
    </resultMap>

    <select id="getPolicyList" resultMap="PolicyMap">
        <![CDATA[
            SELECT DISTINCT (lme.LIPM_INSU_TYPE ||lme.LIPM_INSU_GRP_NO || lme.LIPM_INSU_SEQ_NO) POLICY_NO, lme.LIPM_INSU_TYPE POLICY_TYPE,
            lme.LIPM_NAME_1 LIPM_NAME, lme.LIPM_ID, lie.LIPI_NAME, lie.LIPI_ID, lbe.BNAG_REC_CLERK AGENT_NAME,
            CASE
                WHEN lme.LIPM_ST <= 18 THEN 1
                WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
                WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
                END AS STATUS,
            to_char(lie.LIPI_INSU_BEG_DATE, 'yyyy-MM-dd') EFFECTIVE_DATE, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
            lie.LIPI_TABL_PREM, (CASE WHEN lme.LIPM_RCP_CODE = 'A' AND lme.LIPM_FLEX_RCP_MK = 'Y' THEN 'T' ELSE lme.LIPM_RCP_CODE END) AS PAYMENT_MODE, lpe.PROD_CURRENCY CURRENCY,
            lie.LIPI_PREM_YEAR PREM_YEAR, lpe.SETT_INSU_TYPE PROD_MODE, lpe.SETT_CH_NAME PROD_NAME, lme.LIPM_RCP_METH_CODE
            FROM LILIPM_ES_FLOWTEST lme
            LEFT JOIN LILIPI_ES_FLOWTEST lie
                ON (lme.LIPM_INSU_TYPE ||lme.LIPM_INSU_GRP_NO || lme.LIPM_INSU_SEQ_NO) = (lie.LIPI_INSU_TYPE || lie.LIPI_INSU_GRP_NO || lie.LIPI_INSU_SEQ_NO)
            LEFT JOIN LIBNAG_ES_FLOWTEST lbe
                ON (lme.LIPM_INSU_TYPE ||lme.LIPM_INSU_GRP_NO || lme.LIPM_INSU_SEQ_NO) = (lbe.BNAG_INSU_TYPE || lbe.BNAG_INSU_GRP_NO || lbe.BNAG_INSU_SEQ_NO)
            LEFT JOIN LILIPB_ES_FLOWTEST lpb
                ON (lme.LIPM_INSU_TYPE ||lme.LIPM_INSU_GRP_NO || lme.LIPM_INSU_SEQ_NO) = (lpb.LIPB_INSU_TYPE || lpb.LIPB_INSU_GRP_NO || lpb.LIPB_INSU_SEQ_NO)
            LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
            ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
            LEFT JOIN LINEDR_ES_FLOWTEST lnr ON lnr.NEDR_BANK_BRANCH = lbe.BNAG_S_BANK_BRANCH_CODE AND lme.LIPM_AGEN_CODE = lnr.NEDR_AGEN_CODE
            ]]>
            <where>
                <foreach collection="vo.permQuery" item="item" separator="OR">
                    (
                        <trim prefixOverrides="AND">
                            <if test="item.serialNum != null and item.serialNum != ''">
                                AND lbe.BNAG_ID = #{item.serialNum}
                            </if>
                            <if test="item.branchCode != null and item.branchCode != ''">
                                AND lbe.BNAG_S_BANK_BRANCH_CODE = #{item.branchCode}
                            </if>
                            <if test="item.agentCode != null and item.agentCode != ''">
                                <choose>
                                    <when test="item.agentCode == '86900'">
                                        AND lme.LIPM_AGEN_CODE = '869' AND lme.LIPM_AGEN_CODE_BRANCH = '00'
                                    </when>
                                    <when test="item.agentCode == '86901'">
                                        AND lme.LIPM_AGEN_CODE = '869' AND lme.LIPM_AGEN_CODE_BRANCH = '01'
                                    </when>
                                    <otherwise>
                                            AND lme.LIPM_AGEN_CODE = #{item.agentCode}
                                    </otherwise>
                                </choose>
                            </if>
                        </trim>
                    )
                </foreach>
                <if test="vo.policyNo != null and vo.policyNo != ''">
                    AND (lme.LIPM_INSU_TYPE||lme.LIPM_INSU_GRP_NO||lme.LIPM_INSU_SEQ_NO)
                            LIKE CONCAT('%', CONCAT(#{vo.policyNo}, '%'))
                </if>
                <if test="vo.lipmName != null and vo.lipmName != ''">
                    AND lme.LIPM_NAME_1 LIKE CONCAT('%', CONCAT(#{vo.lipmName}, '%'))
                </if>
                <if test="vo.lipmId != null and vo.lipmId != ''">
                    AND lme.LIPM_ID LIKE CONCAT('%', CONCAT(#{vo.lipmId}, '%'))
                </if>
                <if test="vo.lipiName != null and vo.lipiName != ''">
                    AND lie.LIPI_NAME LIKE CONCAT('%', CONCAT(#{vo.lipiName}, '%'))
                </if>
                <if test="vo.lipiId != null and vo.lipiId != ''">
                    AND lie.LIPI_ID LIKE CONCAT('%', CONCAT(#{vo.lipiId}, '%'))
                </if>
                <if test="vo.prodName != null and vo.prodName != ''">
                    AND lpe.SETT_CH_NAME LIKE CONCAT('%', CONCAT(#{vo.prodName}, '%'))
                </if>
                <![CDATA[
                    AND lme.LIPM_NAME_1<>lie.LIPI_NAME and lme.LIPM_NAME_1<>lpb.LIPB_NAME and lie.LIPI_NAME<>lpb.LIPB_NAME and lpb.LIPB_ID_NO is NOT null and lme.LIPM_CHAR_ID is NOT null and lpb.LIPB_ID_NO<>' ' and lbe.BNAG_S_BANK_BRANCH_CODE is NOT null and lbe.BNAG_REC_CLERK is NOT null
                 ]]>
            </where>
    </select>

    <resultMap id="PolicyBaseMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyBaseVo">
        <result column="POLICY_NO" property="policyNo"/>
        <result column="POLICY_TYPE" property="policyType"/>
        <result column="LIPM_NAME" property="lipmName"/>
        <result column="LIPM_ID" property="lipmId"/>
        <result column="PMDA_APPLICANT_CELLPHONE" property="lipmPhone"/>
        <result column="PMDA_APPLICANT_EMAIL" property="lipmMail"/>
        <result column="LIPM_ADDR" property="lipmAddr"/>
        <result column="LIPI_NAME" property="lipiName"/>
        <result column="LIPI_ID" property="lipiId"/>
        <result column="LIPI_BIRTH" property="lipiBirth"/>
        <result column="LIPI_AGE" property="lipiAge"/>
        <result column="LIPI_SEX" property="lipiSex"/>
        <result column="AGENT_NAME" property="agent"/>
        <result column="STATUS" property="status"/>
        <result column="EFFECTIVE_DATE" property="effectiveDate"/>
        <result column="MAIN_AMOUNT" property="mainAmount"/>
        <result column="LIPI_TABL_PREM" property="lipiTablPrem"/>
        <result column="PAYMENT_MODE" property="paymentMode"/>
        <result column="PREM_YEAR" property="premYear"/>
        <result column="PROD_MODE" property="prodMode"/>
        <result column="PROD_NAME" property="prodName"/>
        <result column="LIPM_TEL_H" property="lipmTelH"/>
        <result column="LIPM_RCP_METH_CODE" property="paymentMethod"/>
        <result column="LIPI_INSU_BEG_DATE" property="beginDate"/>
        <result column="LIPI_INSU_END_DATE" property="endDate"/>
        <result column="PMDA_EPO_MK" property="pmdaEpoMk"/>
        <result column="CURRENCY" property="currency"/>
        <result column="PMDA_PRINT_DATE" property="printDate"/>
        <result column="LIPM_BIRTH" property="lipmBirth"/>
        <result column="PMDA_PI_TEL" property="pmdaPiTel"/>
        <result column="ASSN_ARRI_DATE" property="assnDate"/>
        <result column="ASSN_TR_ARRI_DATE" property="assnTrDate"/>
        <result column="PMDA_MAIL" property="pmdaMail"/>
        <result column="ASSN_STATUS" property="assnStatus"/>
        <result column="LIPM_5_GP" property="lipmGp"/>
        <result column="LIPM_AUTO_RCP_MK" property="autoMk"/>
        <result column="NEDR_BRANCH_NAME" property="branchName"/>
        <association property="beneficiaries" resultMap="PolicyBeneficiaryMap"></association>
    </resultMap>

    <resultMap id="PolicyBeneficiaryMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyBeneficiaryVo">
        <result column="LIPB_NAME" property="lipbName"/>
        <result column="LIPB_RELA" property="rela"/>
        <result column="LIPB_BENI_CODE" property="code"/>
        <result column="LIPB_SEQ" property="seq"/>
    </resultMap>

    <select id="getBasePolicy" resultMap="PolicyBaseMap">
        <![CDATA[
        SELECT CASE
            WHEN lme.LIPM_ST <= 18 THEN 1
            WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
            WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
            END AS STATUS, lie.LIPI_TABL_PREM,
        to_char(lie.LIPI_INSU_BEG_DATE, 'yyyy-MM-dd') EFFECTIVE_DATE,
        lme.LIPM_AUTO_RCP_MK, lnr.NEDR_BRANCH_NAME, to_char(lbe.BNAG_BIRTH, 'yyyy-MM-dd') LIPM_BIRTH,
        to_char(lsn.ASSN_ARRI_DATE, 'yyyy-MM-dd') ASSN_ARRI_DATE, to_char(lsn.ASSN_TR_ARRI_DATE, 'yyyy-MM-dd') ASSN_TR_ARRI_DATE, lip.PMDA_MAIL, lsn.ASSN_STATUS,
        lme.LIPM_TEL_H, lip.PMDA_APPLICANT_CELLPHONE, lip.PMDA_APPLICANT_EMAIL, lme.LIPM_5_GP,
        lme.LIPM_ADDR, to_char(lie.LIPI_BIRTH, 'yyyy-MM-dd') LIPI_BIRTH, lie.LIPI_AGE, lie.LIPI_SEX, lbp.LIPB_NAME, lbp.LIPB_RELA, lpe.PROD_CURRENCY CURRENCY,
        lbp.LIPB_BENI_CODE, lbp.LIPB_SEQ, lme.LIPM_NAME_1  LIPM_NAME, lme.LIPM_ID, lie.LIPI_NAME, lie.LIPI_ID,
        (CASE WHEN lme.LIPM_RCP_CODE = 'A' AND lme.LIPM_FLEX_RCP_MK = 'Y' THEN 'T' ELSE lme.LIPM_RCP_CODE END) AS PAYMENT_MODE, lip.PMDA_EPO_MK,
        (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT, lip.PMDA_PI_TEL,
        to_char(lie.LIPI_INSU_BEG_DATE, 'yyyy-MM-dd') LIPI_INSU_BEG_DATE, to_char(lie.LIPI_INSU_END_DATE, 'yyyy-MM-dd') LIPI_INSU_END_DATE, lme.LIPM_RCP_METH_CODE, lie.LIPI_PREM_YEAR PREM_YEAR,
        lpe.SETT_CH_NAME PROD_NAME, CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) POLICY_NO, to_char(lip.PMDA_PRINT_DATE, 'yyyy-MM-dd') PMDA_PRINT_DATE
        FROM LILIPM_ES_FLOWTEST lme LEFT JOIN LILIPI_ES_FLOWTEST lie
            ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
            ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIPMDA_ES_FLOWTEST lip ON lme.LIPM_INSU_TYPE = lip.PMDA_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lip.PMDA_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lip.PMDA_INSU_SEQ_NO
        LEFT JOIN LILIPB_ES_FLOWTEST lbp ON lme.LIPM_INSU_TYPE = lbp.LIPB_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lbp.LIPB_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lbp.LIPB_INSU_SEQ_NO
        LEFT JOIN LIASSN_ES_FLOWTEST lsn ON lsn.ASSN_INSU_NO = (lme.LIPM_INSU_TYPE || lme.LIPM_INSU_GRP_NO ||lme.LIPM_INSU_SEQ_NO)
        LEFT JOIN LIBNAG_ES_FLOWTEST lbe ON lbe.BNAG_INSU_TYPE = lme.LIPM_INSU_TYPE AND lbe.BNAG_INSU_GRP_NO = lme.LIPM_INSU_GRP_NO AND lbe.BNAG_INSU_SEQ_NO = lme.LIPM_INSU_SEQ_NO
        LEFT JOIN LINEDR_ES_FLOWTEST lnr ON lnr.NEDR_BANK_BRANCH = lbe.BNAG_S_BANK_BRANCH_CODE AND lme.LIPM_AGEN_CODE = lnr.NEDR_AGEN_CODE
        WHERE (lme.LIPM_INSU_TYPE||lme.LIPM_INSU_GRP_NO||lme.LIPM_INSU_SEQ_NO) = #{policyNo}
        ]]>
    </select>

    <resultMap id="SafeGuardMap" type="com.twfhclife.eservice.api.shouxian.model.SafeGuardVo">
        <result column="DESI_DESC_CH" property="name"/>
    </resultMap>

    <select id="getSafeGuard" resultMap="SafeGuardMap">
        SELECT lde.DESI_DESC_CH
        FROM LILIPM_ES_FLOWTEST lme
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIDESI_ES_FLOWTEST lde ON lde.DESI_CODE = lpe.SETT_INSU_TYPE
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PaymentRecordMap" type="com.twfhclife.eservice.api.shouxian.model.PaymentRecordVo">
        <result column="PRPA_RCP_DATE" property="rcpDate"/>
        <result column="PRPA_PAAB_AMT" property="paabAmt"/>
        <result column="PRPA_ACT_AMT" property="actAmt"/>
        <result column="PRPA_RCP_CODE" property="rcpCode"/>
        <result column="PRPA_DESC" property="desc"/>
    </resultMap>

    <select id="getPaymentRecord" resultMap="PaymentRecordMap">
        SELECT to_char(lpp.PRPA_RCP_DATE, 'yyyy-MM-dd') PRPA_RCP_DATE, lpp.PRPA_PAAB_AMT, lpp.PRPA_ACT_AMT, lpp.PRPA_RCP_CODE,
        CONCAT('第', CONCAT(lpp.PRPA_TMS, CONCAT('期/共', CONCAT(
            CASE WHEN lpp.PRPA_RCP_CODE = N'A' THEN lie.LIPI_PREM_YEAR * 1
            WHEN lpp.PRPA_RCP_CODE = N'S' THEN lie.LIPI_PREM_YEAR * 2
            WHEN lpp.PRPA_RCP_CODE = N'Q' THEN lie.LIPI_PREM_YEAR * 4
            WHEN lpp.PRPA_RCP_CODE = N'M' THEN lie.LIPI_PREM_YEAR * 12
            WHEN lpp.PRPA_RCP_CODE = N'T' THEN 1
        END, '期'
        ))))
        PRPA_DESC
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN LIPRPA_ES_FLOWTEST lpp ON lme.LIPM_INSU_TYPE = lpp.PRPA_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lpp.PRPA_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lpp.PRPA_INSU_SEQ_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="PremiumMap" type="com.twfhclife.eservice.api.shouxian.model.PremiumVo">
        <result column="BONF_FILE_BEG_DATE" property="beginDate"/>
        <result column="BONF_BON_BAL" property="balance"/>
        <result column="BONF_TAKE_CODE" property="code"/>
        <result column="BONF_BON_DATE" property="bonDate"/>
        <result column="PREMIUM" property="premium"/>
    </resultMap>

    <select id="getPolicyPremium" resultMap="PremiumMap">
        <![CDATA[
            SELECT
            TO_CHAR(BONF_BON_DATE, 'yyyy-MM-dd') BONF_BON_DATE,
            TO_CHAR(BONF_FILE_BEG_DATE, 'yyyy-MM-dd') BONF_FILE_BEG_DATE,
            BONF_BON || NVL(BONF_RIDER_CODE_1, '') || NVL(BONF_RIDER_CODE_2,'') || NVL(BONF_RIDER_CODE_3, '') || NVL(BONF_RIDER_CODE_4,'') PREMIUM,
            BONF_BON_BAL, BONF_TAKE_CODE
            FROM LIBONF WHERE
            BONF_INSU_TYPE ||BONF_INSU_GRP_NO ||BONF_INSU_SEQ_NO = #{policyNo}
            AND BONF_BON_BAL<>0 AND BONF_BON_DATE IS NOT NULL
           ]]>
    </select>

    <resultMap id="ExpireOfPaymentMap" type="com.twfhclife.eservice.api.shouxian.model.ExpireOfPaymentVo">
        <result column="PAYF_PAY_REAS" property="payReas"/>
        <result column="PAYF_PAY_AMT" property="payAmount"/>
        <result column="PAHI_DEP_I_BOOK_DATE" property="bookDate"/>
        <result column="PAYF_NAME" property="payName"/>
        <result column="PAYF_PAY_METH" property="payMethod"/>
        <result column="PAYF_BANK" property="bank"/>
        <result column="PAHI_REMIT_AT" property="remitAt"/>
        <result column="PAHI_BANK_CODE" property="bankCode"/>
    </resultMap>

    <select id="getExpireOfPayment" resultMap="ExpireOfPaymentMap">
        SELECT lbf.PAYF_PAY_AMT,
            to_char(lph.PAHI_DEP_I_BOOK_DATE, 'yyyy-MM-dd') PAHI_DEP_I_BOOK_DATE, lbf.PAYF_PAY_METH, lbf.PAYF_BANK, lbf.PAYF_NAME,
            lph.PAHI_REMIT_AT, lph.PAHI_BANK_CODE, PAHI_PAY_CODE PAYF_PAY_REAS
            FROM LIPAYF_ES_FLOWTEST lbf
            LEFT JOIN LIPAHI lph ON lph.PAHI_INSU_TYPE||lph.PAHI_INSU_GRP_NO||lph.PAHI_INSU_SEQ_NO = lbf.PAYF_INSU_NO
        WHERE lbf.PAYF_INSU_NO = #{policyNo}
    </select>

    <resultMap id="PolicyChangeInfoMap" extends="PolicyMap" type="com.twfhclife.eservice.api.shouxian.model.PolicyChangeInfoVo">
        <collection property="changeInfos" resultMap="ChangeInfoMap"/>
    </resultMap>

    <resultMap id="ChangeInfoMap" type="com.twfhclife.eservice.api.shouxian.model.ChangeInfoVo">
        <result column="RCDC_DELIVERY_AGEN_CODE" property="applyType"/>
        <result column="RCDC_ACC_DATE" property="accDate"/>
        <result column="RCDC_PROC_MK" property="procMk"/>
        <result column="RCDC_CHAN_ITEM_1" property="item1"/>
        <result column="RCDC_CHAN_ITEM_2" property="item2"/>
        <result column="RCDC_CHAN_ITEM_3" property="item3"/>
        <result column="RCDC_CHAN_ITEM_4" property="item4"/>
        <result column="RCDC_CHAN_ITEM_5" property="item5"/>
        <result column="RCDC_CHAN_ITEM_6" property="item6"/>
        <result column="RCDC_CHAN_ITEM_7" property="item7"/>
        <result column="RCDC_CHAN_ITEM_8" property="item8"/>
        <result column="RCDC_CHAN_ITEM_9" property="item9"/>
        <result column="RCDC_CHAN_ITEM_10" property="item10"/>
    </resultMap>

    <select id="getPolicyChangeInfo" resultMap="PolicyChangeInfoMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_TABL_PREM,
        CASE
        WHEN lme.LIPM_ST &lt;= 18 THEN 1
        WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
        WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY,
        lrc.RCDC_DELIVERY_AGEN_CODE, to_char(lrc.RCDC_ACC_DATE, 'yyyy-MM-dd') RCDC_ACC_DATE, lrc.RCDC_PROC_MK,
        lrc.RCDC_CHAN_ITEM_1, lrc.RCDC_CHAN_ITEM_2, lrc.RCDC_CHAN_ITEM_3, lrc.RCDC_CHAN_ITEM_4, lrc.RCDC_CHAN_ITEM_5, lrc.RCDC_CHAN_ITEM_6, lrc.RCDC_CHAN_ITEM_7, lrc.RCDC_CHAN_ITEM_8, lrc.RCDC_CHAN_ITEM_9, lrc.RCDC_CHAN_ITEM_10
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        LEFT JOIN LIRCDC_ES_FLOWTEST lrc ON lme.LIPM_INSU_TYPE = lrc.RCDC_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lrc.RCDC_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lrc.RCDC_INSU_SEQ_NO
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <select id="getPolicyInfo" resultMap="PolicyMap">
        SELECT lpe.SETT_CH_NAME PROD_NAME, (CASE WHEN lie.LIPI_MAIN_AMT = 0 THEN lie.LIPI_CANCER_QUAN ELSE lie.LIPI_MAIN_AMT END) AS MAIN_AMOUNT,
        lie.LIPI_INSU_END_DATE, lie.LIPI_TABL_PREM,
        CASE
        WHEN lme.LIPM_ST &lt;= 18 THEN 1
        WHEN lme.LIPM_ST BETWEEN 30 AND 34 THEN 2
        WHEN add_months(lie.LIPI_INSU_END_DATE, 24) > sysdate THEN 3
        END AS STATUS, lme.LIPM_NAME_1 LIPM_NAME, lie.LIPI_NAME, lpe.PROD_CURRENCY CURRENCY
        FROM LILIPM_ES_FLOWTEST lme INNER JOIN LILIPI_ES_FLOWTEST lie
        ON lme.LIPM_INSU_TYPE = lie.LIPI_INSU_TYPE AND lme.LIPM_INSU_GRP_NO = lie.LIPI_INSU_GRP_NO AND lme.LIPM_INSU_SEQ_NO = lie.LIPI_INSU_SEQ_NO
        LEFT JOIN (SELECT DISTINCT lse.SETT_INSU_TYPE, lse.SETT_CH_NAME, lie.PROD_CURRENCY FROM LIPROD_ES_FLOWTEST lie INNER JOIN LISETT_ES_FLOWTEST lse ON lie.PROD_NO = lse.SETT_INSU_TYPE) lpe
        ON lme.LIPM_INSU_TYPE = lpe.SETT_INSU_TYPE
        WHERE CONCAT(CONCAT(lme.LIPM_INSU_TYPE, lme.LIPM_INSU_GRP_NO), lme.LIPM_INSU_SEQ_NO) = #{policyNo}
    </select>

    <resultMap id="IncomeDistributionMap" type="com.twfhclife.eservice.api.shouxian.model.IncomeDistributionVo">
        <result column="INVT_NAME" property="invtName"/>
        <result column="INVT_NO" property="invtNo"/>
        <result column="INPD_INT_COMPU_DATE" property="compuDate"/>
        <result column="CLUP_TR_DATE" property="trDate"/>
        <result column="INVT_EXCH_CURR" property="currency"/>
        <result column="CLUP_EXPE_UNITS" property="expeUnits"/>
        <result column="CLUP_INPR_RATE" property="inprRate"/>
        <result column="CLUP_TR_DATE" property="trDate"/>
        <result column="CLUP_EXPE_NTD" property="expeNtd"/>
        <result column="CLUP_EXCH_RATE" property="exchRate"/>
        <result column="UNITS" property="units"/>
        <result column="CLUP_F_PAY_DATE" property="payDate"/>
        <result column="CLUP_TR_CODE" property="trCode"/>
    </resultMap>

    <select id="getIncomeDistribution" resultMap="IncomeDistributionMap">
        SELECT DISTINCT lin.INVT_NAME, lin.INVT_NO, lcp.CLUP_TR_CODE,
        CASE
        WHEN lcp.CLUP_DEDT_INPR != 0 THEN  lcp.CLUP_EXPE_UNITS * (lcp.CLUP_INPR_RATE - lcp.CLUP_OW_UNIT_INT ) / lcp.CLUP_DEDT_INPR
        ELSE 0
        END AS UNITS,
        lcp.CLUP_EXPE_NTD, to_char(lcp.CLUP_F_PAY_DATE, 'yyyy-MM-dd') CLUP_F_PAY_DATE,
        to_char(lcp.CLUP_TR_DATE, 'yyyy-MM-dd') CLUP_TR_DATE, lcp.CLUP_EXPE_CURR, lcp.CLUP_EXPE_UNITS, lcp.CLUP_INPR_RATE,
        lcp.CLUP_TR_DATE, lcp.CLUP_EXCH_RATE, lcp.CLUP_EXPE_NTD, lcp.CLUP_EXPE_NTD, lcp.CLUP_EXCH_RATE,
        to_char(lip.INPD_INT_COMPU_DATE - numtodsinterval(1, 'day'), 'yyyy-MM-dd') INPD_INT_COMPU_DATE
        FROM LICLUP_ES_FLOWTEST lcp
        LEFT JOIN LIINPD_ES_FLOWTEST lip ON lcp.CLUP_INVT_NO = lip.INPD_INVT_NO AND lip.INPD_DATE = lcp.CLUP_DATE
        LEFT JOIN LIINVT_ES_FLOWTEST lin ON lcp.CLUP_INVT_NO = lin.INVT_NO
        WHERE lcp.CLUP_INSU_NO = #{policyNo}
        ORDER BY lcp.CLUP_TR_DATE DESC
    </select>

    <resultMap id="FundTransactionListMap" type="com.twfhclife.eservice.api.shouxian.model.JdFundTransactionVo">
        <result column="INVT_NAME" property="invtName"/>
        <result column="INVT_NO" property="invtNo"/>
        <result column="SADP_TR_DATE" property="sadpTrDate"/>
        <result column="SADP_TR_CODE" property="sadpTrCode"/>
        <result column="SADP_TR_UNITS" property="sadpTrUnits"/>
        <result column="FUND_VALUE" property="fundValue"/>
        <result column="SADP_EXCH_DATE" property="sadpExchDate"/>
        <result column="SADP_EXCH_CURR" property="invtExchCurr"/>
        <result column="FUND_VALUE" property="exchRate"/>
    </resultMap>

    <select id="getFundTransactionPageList" resultMap="FundTransactionListMap">
        SELECT * FROM (
            SELECT rownum ROW_NUM, lsp.SADP_TR_DATE, lin.INVT_NAME, lin.INVT_NO, lsp.SADP_TR_CODE,
            CASE WHEN SUBSTR(lsp.SADP_NO, 1, 2) = 'RT' THEN lsp.SADP_TR_AMT
            ELSE SADP_TR_UNITS
            END SADP_TR_UNITS,
            CASE WHEN lsp.SADP_TR_TYPE = '1' THEN leh.EXCH_SPEBK_PURATE
            WHEN lsp.SADP_TR_TYPE = '2' THEN leh.EXCH_SPEBK_SORATE
            END FUND_VALUE, lsp.SADP_EXCH_DATE,lsp.SADP_EXCH_CURR
            FROM LISADP_ES_FLOWTEST lsp
            LEFT JOIN LIINVT_ES_FLOWTEST lin ON lsp.SADP_INVT_NO  = lin.INVT_NO
            LEFT JOIN LIEXCH_ES_FLOWTEST leh ON lsp.SADP_TR_DATE = leh.EXCH_DATE
            <where>
                AND lsp.SADP_INSU_NO = #{policyNo}
                <if test="trCode != null">
                    <choose>
                        <when test="trCode == 'INV101'">
                            AND lsp.SADP_TR_CODE IN ('INV101', 'INV102', 'INV103')
                        </when>
                        <otherwise>
                            AND lsp.SADP_TR_CODE = #{trCode}
                        </otherwise>
                    </choose>
                </if>
                <if test="startDate != null">
                    AND lsp.SADP_TR_DATE <![CDATA[>=]]> to_date(#{startDate}, 'yyyy/MM/dd')
                </if>
                <if test="endDate != null">
                    AND lsp.SADP_TR_DATE <![CDATA[<=]]> to_date(#{endDate}, 'yyyy/MM/dd')
                </if>
            </where>
        )
        <if test="pageNum != null and pageSize != null">
            WHERE
            ROW_NUM <![CDATA[>=]]> ((#{pageNum} - 1) * #{pageSize}) + 1
            AND ROW_NUM <![CDATA[<=]]> (#{pageNum} * #{pageSize})
        </if>
    </select>

    <select id="getFundTransactionTotal" resultType="int">
        SELECT COUNT(*) FROM (
        SELECT rownum ROW_NUM, lsp.SADP_TR_DATE, lin.INVT_NAME, lin.INVT_NO, lsp.SADP_TR_CODE,
        CASE WHEN SUBSTR(lsp.SADP_NO, 1, 2) = 'RT' THEN lsp.SADP_TR_AMT
        ELSE SADP_TR_UNITS
        END SADP_TR_UNITS,
        CASE WHEN lsp.SADP_TR_TYPE = '1' THEN leh.EXCH_SPEBK_PURATE
        WHEN lsp.SADP_TR_TYPE = '2' THEN leh.EXCH_SPEBK_SORATE
        END FUND_VALUE, lsp.SADP_EXCH_DATE
        FROM LISADP_ES_FLOWTEST lsp
        LEFT JOIN LIINVT_ES_FLOWTEST lin ON lsp.SADP_INVT_NO  = lin.INVT_NO
        LEFT JOIN LIEXCH_ES_FLOWTEST leh ON lsp.SADP_TR_DATE = leh.EXCH_DATE
        <where>
            AND lsp.SADP_INSU_NO = #{policyNo}
            <if test="trCode != null">
                <choose>
                    <when test="trCode == 'INV101'">
                        AND lsp.SADP_TR_CODE IN ('INV101', 'INV102', 'INV103')
                    </when>
                    <otherwise>
                        AND lsp.SADP_TR_CODE = #{trCode}
                    </otherwise>
                </choose>
            </if>
            <if test="startDate != null">
                AND lsp.SADP_TR_DATE <![CDATA[>=]]> to_date(#{startDate}, 'yyyy/MM/dd')
            </if>
            <if test="endDate != null">
                AND lsp.SADP_TR_DATE <![CDATA[<=]]> to_date(#{endDate}, 'yyyy/MM/dd')
            </if>
        </where>
        )
    </select>

    <resultMap id="FundPrdtListMap" type="com.twfhclife.eservice.api.shouxian.model.FundPrdtVo">
        <result column="PRDT_BOOK_DATE" property="prdtBookDate"/>
        <result column="PRDT_RCP_AMT" property="prdtRcpAmt"/>
        <result column="INT_AMOUNT" property="prdtInvestAmt"/>
        <result column="PREMIUM_COST" property="cost"/>
        <result column="PRDT_RCP_AMT" property="prdtRcpAmt"/>
    </resultMap>

    <select id="getFundPrdtPageList" resultMap="FundPrdtListMap">
        SELECT * FROM (
            SELECT rownum ROW_NUM, lpt.PRDT_BOOK_DATE, lpt.PRDT_RCP_AMT,
            lpt.PRDT_TARGET_LOADING  + lpt.PRDT_INCRE_LOADING PREMIUM_COST,
            NVL(lti.TRHI_INT, 0) - NVL(lti.TRHI_INT_TAX, 0) - NVL(lti.TRHI_SUPPLE_PREM, 0) INT_AMOUNT
            FROM LIPRDT_ES_FLOWTEST lpt
            LEFT JOIN LITRHI_ES_FLOWTEST lti ON lpt.PRDT_INSU_NO = lti.TRHI_INSU_NO AND lti.TRHI_DATE = lpt.PRDT_BOOK_DATE
        <where>
            AND lpt.PRDT_INSU_NO = #{policyNo}
            <if test="startDate != null">
                AND lpt.PRDT_BOOK_DATE <![CDATA[>=]]> to_date(#{startDate}, 'yyyy/MM/dd')
            </if>
            <if test="endDate != null">
                AND lpt.PRDT_BOOK_DATE <![CDATA[<=]]> to_date(#{endDate}, 'yyyy/MM/dd')
            </if>
        </where>
        )
        <if test="pageNum != null and pageSize != null">
            WHERE
            ROW_NUM <![CDATA[>=]]> ((#{pageNum} - 1) * #{pageSize}) + 1
            AND ROW_NUM <![CDATA[<=]]> (#{pageNum} * #{pageSize})
        </if>
    </select>

    <select id="getFundPrdtTotal" resultType="int">
        SELECT COUNT(*) FROM (
            SELECT rownum ROW_NUM, lpt.PRDT_BOOK_DATE, lpt.PRDT_RCP_AMT,
            lpt.PRDT_TARGET_LOADING  + lpt.PRDT_INCRE_LOADING PREMIUM_COST,
            NVL(lti.TRHI_INT, 0) - NVL(lti.TRHI_INT_TAX, 0) - NVL(lti.TRHI_SUPPLE_PREM, 0) INT_AMOUNT,
            lpt.PRDT_RCP_AMT PAID_AMOUNT
            FROM LIPRDT_ES_FLOWTEST lpt
        LEFT JOIN LITRHI_ES_FLOWTEST lti ON lpt.PRDT_INSU_NO = lti.TRHI_INSU_NO AND lti.TRHI_DATE = lpt.PRDT_BOOK_DATE
        <where>
            AND lpt.PRDT_INSU_NO = #{policyNo}
            <if test="startDate != null">
                AND lpt.PRDT_BOOK_DATE <![CDATA[>=]]> to_date(#{startDate}, 'yyyy/MM/dd')
            </if>
            <if test="endDate != null">
                AND lpt.PRDT_BOOK_DATE <![CDATA[<=]]> to_date(#{endDate}, 'yyyy/MM/dd')
            </if>
        </where>
        )
    </select>

    <select id="getExchangeRate" resultType="com.twfhclife.eservice.policy.model.ExchangeRateVo">
        SELECT INPR_TRAN_DATE effectiveDate, INPR_UNIT_PURPRICE buyPrice, INPR_UNIT_SOLPRICE sellPrice
        FROM LIINPR_ES_FLOWTEST
        <where>
            AND INPR_INVT_NO = #{exchangeRateVo.exchangeCode}
            <if test="exchangeRateVo.effectiveDate != null"> AND INPR_TRAN_DATE = #{exchangeRateVo.effectiveDate} </if>
            <if test="exchangeRateVo.queryType != null and exchangeRateVo.queryType == 'A'.toString()">
                AND INPR_TRAN_DATE >= add_months(SYSDATE, -1)
            </if>
            <if test="exchangeRateVo.queryType != null and exchangeRateVo.queryType == 'B'.toString()">
                AND INPR_TRAN_DATE >= add_months(SYSDATE, -3)
            </if>
            <if test="exchangeRateVo.queryType != null and exchangeRateVo.queryType == 'C'.toString()">
                AND to_char(INPR_TRAN_DATE, 'yyyy/MM') = #{exchangeRateVo.queryMonth}
            </if>
        </where>
    </select>

    <select id="getPortfolioList" resultType="com.twfhclife.eservice.policy.model.PortfolioVo">
        SELECT lir.INPR_UNIT_SOLPRICE netValueSell, lin.INVT_EXCH_CURR invtExchCurr, lir.INPR_TRAN_DATE_MAX netValueDate,
        lip.SAFP_NET_UNITS safpNetUnits, lip.SAFP_ACCU_INVEST_BFEXCH ownPval, lip.SAFP_AVG_PVAL avgPval,
        lin.INVT_RISK_BENE_LEVEL riskBeneLevel, lin.INVT_NO invtNo, lin.INVT_NAME invtName, lip.SAFP_INSU_NO policyNo,
        leh.EXCH_SPEBK_PURATE exchRateBuy, SUM(lcp.CLUP_EXPE_NTD) clupExpeNtdSum, lip.SAFP_NET_AMT safpNetAmt, lip.SAFP_AVG_PNTDVAL safpAvgPntdval
        FROM LISAFP_ES_FLOWTEST lip
        LEFT JOIN LIINVT_ES_FLOWTEST lin ON lip.SAFP_INVT_NO = lin.INVT_NO
        LEFT JOIN (
        SELECT A.INPR_INVT_NO,B.INPR_TRAN_DATE_MAX,A.INPR_UNIT_SOLPRICE
        FROM LIINPR_ES_FLOWTEST A
        JOIN
        (
        SELECT INPR_INVT_NO AS POLICY_NO, MAX(INPR_TRAN_DATE) INPR_TRAN_DATE_MAX
        FROM LIINPR_ES_FLOWTEST
        GROUP BY INPR_INVT_NO
        ) B
        ON A.INPR_INVT_NO = B.POLICY_NO
        AND A.INPR_TRAN_DATE = B.INPR_TRAN_DATE_MAX
        ) lir ON lir.INPR_INVT_NO = lip.SAFP_INVT_NO
        LEFT JOIN LIEXCH_ES_FLOWTEST leh ON lip.SAFP_INIT_DATE = leh.EXCH_DATE
        LEFT JOIN LICLUP_ES_FLOWTEST lcp ON lcp.CLUP_INVT_NO = lip.SAFP_INVT_NO AND lip.SAFP_INSU_NO = lcp.CLUP_INSU_NO
        WHERE lip.SAFP_INSU_NO = #{policyNo}
        GROUP BY lir.INPR_UNIT_SOLPRICE, lir.INPR_TRAN_DATE_MAX,  lip.SAFP_NET_UNITS, lip.SAFP_NET_UNITS,
        lin.INVT_RISK_BENE_LEVEL, lin.INVT_NAME, lip.SAFP_ACCU_INVEST_BFEXCH,
        leh.EXCH_SPEBK_PURATE, lip.SAFP_AVG_PNTDVAL, lip.SAFP_NET_AMT, lin.INVT_NO, lin.INVT_EXCH_CURR, lip.SAFP_AVG_PVAL, lip.SAFP_INSU_NO
    </select>

    <select id="selectPolicyAmount" resultType="com.twfhclife.eservice.api.shouxian.model.PolicyAmountVo">
        SELECT to_char(MAX(MAX_DATE), 'yyyy-MM-dd') policyDate, NVL(SUM(VAL * INPR_UNIT_SOLPRICE), 0) policyVal FROM (
        SELECT MAX(POEV_EDATE) MAX_DATE, NVL(SUM(POEV_SAFP_UNITS * POEV_STATE_EXCH_RATE), 0) VAL, POEV_INVT_NO  FROM LIPOEV_ES_FLOWTEST
        WHERE POEV_INSU_NO = #{policyNo}
        GROUP BY POEV_INVT_NO
        ) lov LEFT JOIN LIINPR_ES_FLOWTEST lpr ON lov.POEV_INVT_NO = lpr.INPR_INVT_NO AND lov.MAX_DATE = lpr.INPR_TRAN_DATE
    </select>
</mapper>